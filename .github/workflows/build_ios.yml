name: Build Flutter iOS IPA

on:
  workflow_dispatch:  # Manual trigger (recommended for production builds)
  push:
    branches: [ main ]  # Auto-trigger on main branch (optional)

jobs:
  build_ios:
    runs-on: macos-latest
    timeout-minutes: 30  # Prevent hangs

    steps:
      ### 1. Checkout Code
      - name: Checkout repository
        uses: actions/checkout@v4

      ### 2. Setup Flutter
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.3'  # Match your project's version
          cache: true

      ### 3. Install CocoaPods (if needed)
      - name: Install CocoaPods
        run: |
          cd ios
          pod install --repo-update
          cd ..

      ### 4. Keychain Setup (from debug workflow)
      - name: Setup Keychain
        env:
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          KEYCHAIN_PATH="$RUNNER_TEMP/signing.keychain"
          security create-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_PATH"
          security set-keychain-settings -lut 21600 "$KEYCHAIN_PATH"
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_PATH"
          security default-keychain -s "$KEYCHAIN_PATH"

      ### 5. Import .p12 Certificate (from debug workflow)
      - name: Import Certificate
        env:
          IOS_CERTIFICATE_PASSWORD: ${{ secrets.IOS_CERTIFICATE_PASSWORD }}
          IOS_CERTIFICATE_BASE64: ${{ secrets.IOS_CERTIFICATE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          KEYCHAIN_PATH="$RUNNER_TEMP/signing.keychain"
          echo "$IOS_CERTIFICATE_BASE64" | base64 --decode > cert.p12
          security import cert.p12 -k "$KEYCHAIN_PATH" -P "$IOS_CERTIFICATE_PASSWORD" -T /usr/bin/codesign
          security set-key-partition-list -S "apple-tool:,apple:" -s -k "$KEYCHAIN_PASSWORD" "$KEYCHAIN_PATH"

      ### 6. Install Provisioning Profile
      - name: Install Provisioning Profile
        env:
          IOS_PROVISIONING_PROFILE_BASE64: ${{ secrets.IOS_PROVISIONING_PROFILE_BASE64 }}
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          echo "$IOS_PROVISIONING_PROFILE_BASE64" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/app.mobileprovision
          echo "Provisioning profile installed"

      ### 7. Build IPA
      - name: Build IPA
        run: |
          flutter pub get
          flutter build ipa --release --export-options-plist=ios/ExportOptions.plist

      ### 8. Upload IPA Artifact
      - name: Upload IPA
        uses: actions/upload-artifact@v4
        with:
          name: app-ipa
          path: build/ios/ipa/*.ipa
