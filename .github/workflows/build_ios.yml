name: Build Flutter iOS IPA

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_ios:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.3'

      - name: Delete old keychain (if exists)
        run: |
          security delete-keychain "$RUNNER_TEMP/temp.keychain-db" || true

      - name: Create temporary keychain
        env:
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          KEYCHAIN_PATH="$RUNNER_TEMP/temp.keychain-db"
          security create-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_PATH"
          security set-keychain-settings -lut 21600 "$KEYCHAIN_PATH"
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_PATH"
          security default-keychain -s "$KEYCHAIN_PATH"
          security list-keychains -s "$KEYCHAIN_PATH"

      - name: Install Apple WWDR Intermediate Certificate
        run: |
          KEYCHAIN_PATH="$RUNNER_TEMP/temp.keychain-db"
          curl -o AppleWWDRCAG3.cer https://www.apple.com/certificateauthority/AppleWWDRCAG3.cer
          security import AppleWWDRCAG3.cer -k "$KEYCHAIN_PATH" -A -T /usr/bin/codesign

      - name: Import Certificate (Manual Method)
        env:
          IOS_CERTIFICATE_PASSWORD: ${{ secrets.IOS_CERTIFICATE_PASSWORD }}
          IOS_CERTIFICATE_BASE64: ${{ secrets.IOS_CERTIFICATE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          KEYCHAIN_PATH="$RUNNER_TEMP/temp.keychain-db"
          
          # Decode certificate
          echo "$IOS_CERTIFICATE_BASE64" | base64 --decode > certificate.p12
          
          # Verify file
          if [ ! -s "certificate.p12" ]; then
            echo "Error: Decoded certificate file is empty"
            exit 1
          fi
          
          # Import with retry logic
          for i in {1..3}; do
            if security import certificate.p12 -k "$KEYCHAIN_PATH" -P "$IOS_CERTIFICATE_PASSWORD" -T /usr/bin/codesign -T /usr/bin/security; then
              echo "Certificate imported successfully"
              break
            else
              echo "Attempt $i failed. Retrying..."
              sleep 2
            fi
          done
          
          # Final verification
          security find-identity -v -p codesigning "$KEYCHAIN_PATH" || exit 1
          security set-key-partition-list -S apple-tool:,apple: -s -k "$KEYCHAIN_PASSWORD" "$KEYCHAIN_PATH"

      - name: Install Provisioning Profile (Manual Method)
        env:
          IOS_PROVISIONING_PROFILE_BASE64: ${{ secrets.IOS_PROVISIONING_PROFILE_BASE64 }}
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          echo "$IOS_PROVISIONING_PROFILE_BASE64" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/profile.mobileprovision
          
          # Verify profile
          if [ ! -s ~/Library/MobileDevice/Provisioning\ Profiles/profile.mobileprovision ]; then
            echo "Error: Provisioning profile is empty"
            exit 1
          fi
          
          echo "Provisioning profile installed successfully"

      - name: Install CocoaPods dependencies
        run: |
          cd ios
          pod install --repo-update
          cd ..

      - name: Build IPA
        run: flutter build ipa --release

      - name: Upload IPA artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-ipa
          path: build/ios/ipa/*.ipa
