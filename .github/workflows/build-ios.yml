name: Upload iOS IPA to App Store Connect

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  upload:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Ruby for Fastlane
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true

      - name: Install Fastlane
        run: gem install fastlane

      - name: Create temporary keychain
        env:
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          security create-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
          security set-keychain-settings -lut 21600 build.keychain
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
          security default-keychain -s build.keychain

      - name: Import Apple certificate
        env:
          IOS_CERTIFICATE_BASE64: ${{ secrets.IOS_CERTIFICATE_BASE64 }}
          IOS_CERTIFICATE_PASSWORD: ${{ secrets.IOS_CERTIFICATE_PASSWORD }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          echo "$IOS_CERTIFICATE_BASE64" | base64 --decode > certificate.p12
          security import certificate.p12 -k build.keychain -P "$IOS_CERTIFICATE_PASSWORD" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$KEYCHAIN_PASSWORD" build.keychain
          security find-identity -v -p codesigning build.keychain | grep "AHVM2Z8TDL" || { echo "Certificate import failed"; exit 1; }

      - name: Install provisioning profile
        env:
          IOS_PROVISIONING_PROFILE_BASE64: ${{ secrets.IOS_PROVISIONING_PROFILE_BASE64 }}
        run: |
          echo "$IOS_PROVISIONING_PROFILE_BASE64" | base64 --decode > profile.mobileprovision
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/7e2e5608-7c77-45ff-ac95-b86f868dff8c.mobileprovision

      - name: Run Fastlane to upload IPA
        run: fastlane ios upload_to_app_store_connect
        working-directory: ${{ github.workspace }}
      - name: Set up Fastlane configuration
        run: |
          mkdir -p ./fastlane
          cat > ./fastlane/Fastfile << EOL
          default_platform(:ios)
          platform :ios do
            lane :upload_to_app_store_connect do
              app_store_connect_api_key(
                key_id: "${{ secrets.APP_STORE_CONNECT_KEY_ID }}",
                issuer_id: "${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}",
                key_content: "${{ secrets.APP_STORE_CONNECT_KEY_CONTENT }}",
                is_key_content_base64: true
              )
              deliver(
                ipa: "./app-ipa/math_joy_practice_english.ipa",
                skip_screenshots: true,
                skip_metadata: true,
                skip_app_version_update: true,
                force: true
              )
            end
          end
          EOL
          working-directory: .
      
      - name: Run Fastlane to upload IPA
        env:
          APP_STORE_CONNECT_KEY_ID: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
          APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          APP_STORE_CONNECT_KEY_CONTENT: ${{ secrets.APP_STORE_CONNECT_KEY_CONTENT }}
        run: fastlane ios upload_to_app_store_connect
        working-directory: ${{ github.workspace }}

      - name: Upload build log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-log
          path: fastlane/report.xml
